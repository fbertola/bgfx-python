language: python
dist: bionic
python:
  - 3.6
  - 3.7
  - 3.8

git:
  quiet: true
  depth: false
  submodules: true

jobs:
  include:
    # Deploy source distribution
    - stage: deploy
      name: Deploy source distribution
      install: python3 -m pip install setuptools wheel scikit-build
      script: python3 setup.py sdist --formats=gztar
#      after_success: |
#        python3 -m pip install twine
#        python3 -m twine upload --skip-existing dist/*.tar.gz

    - stage: deploy
      name: "Build and deploy Linux wheels"
      os: linux
      services: docker
      install: python3 -m pip install cibuildwheel==1.3.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: bash -x -e .travis/after_success.sh

    - stage: deploy
      name: "Build and deploy macOS wheels"
      os: osx
      language: shell
      env: CC=gcc CXX=g++ MACOSX_DEPLOYMENT_TARGET=10.14
      osx_image: xcode10.2
      install: python3 -m pip install cibuildwheel==1.3.0
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: bash -x -e .travis/after_success.sh

env:
  global:
    - CIBW_BUILD_VERBOSITY=0
    - CIBW_SKIP="*-manylinux_i686"
    - CIBW_BUILD="cp36-* cp37-* cp38-*"
    - CIBW_REPAIR_WHEEL_COMMAND_MACOS="delocate-listdeps {wheel} && delocate-wheel -v -w {dest_dir} {wheel}"
    - CIBW_BEFORE_BUILD_LINUX="yum install -y devtoolset-8-gcc devtoolset-8-gcc-c++ clang freeglut freeglut-devel libX11-devel mesa-libGLU-devel byacc"
    - CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014

services:
  - xvfb

addons:
  apt:
    packages:
      - build-essential
      - gcc-8
      - g++-8
      - freeglut3
      - freeglut3-dev
      - libglew-dev
      - libgl1-mesa-dev
      - libglu-dev
      - libglu1-mesa-dev
      - libx11-dev

install:
  - python3 -m pip install setuptools wheel scikit-build cmake glfw ninja numpy loguru pytest pytest-xdist

script:
  - export CC=gcc-8 CXX=g++-8
  - python3 setup.py install
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export PYTHONPATH=.
      cp $VIRTUAL_ENV/lib/python3.*/site-packages/bgfx*/bgfx/*.so ./bgfx
      python3 -m pytest --forked tests/ || travis_terminate 1
    fi

branches:
  only:
    - master

stages:
  - test
  - name: deploy
    if: tag =~ ^v\d+\.\d+\.\d+$ AND repo = fbertola/bgfx-python

notifications:
  email: false